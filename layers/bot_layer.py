import discord
from discord import app_commands
from dotenv import load_dotenv
import os
import asyncio
from layers.visualization_layer import VisualizationLayer

class BotLayer:
    def __init__(self, db_layer):
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
        load_dotenv()
        self.token = os.getenv("TOKEN")
        self.name = os.getenv("NAME")
        self.app_id = os.getenv("ID")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã
        if not self.token or not self.name or not self.app_id:
            raise ValueError("Missing required environment variables: TOKEN, NAME, or ID")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º db_layer –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ VisualizationLayer
        self.db_layer = db_layer
        self.viz_layer = VisualizationLayer(db_layer)

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏–Ω—Ç–µ–Ω—Ç—ã
        intents = discord.Intents.default()
        intents.message_content = True
        intents.presences = True
        intents.members = True
        self.bot = discord.Client(intents=intents)
        self.tree = app_commands.CommandTree(self.bot)

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ on_ready
        @self.bot.event
        async def on_ready():
            print(f"BotLayer: {self.bot.user} (ID: {self.app_id}) has connected to Discord!")
            # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã —Å Discord
            await self.tree.sync()
            print("Slash commands synced!")

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—É /testcharts
        @self.tree.command(name="testcharts", description="–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Ö –≤ –ø–∞–ø–∫—É test_all_charts")
        async def test_charts(interaction: discord.Interaction):
            await interaction.response.send_message("–ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–µ—Å—Ç–æ–≤—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏...")
            loop = asyncio.get_event_loop()
            await loop.run_in_executor(None, self.viz_layer.save_all_plots)
            await interaction.followup.send("–í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ test_all_charts.")

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—É /sessionavg
        @self.tree.command(name="sessionavg", description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–∏–Ω–µ–π–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ —Å—Ä–µ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π –±—Ä–æ—Å–∫–æ–≤ –ø–æ —Å–µ—Å—Å–∏—è–º")
        @app_commands.describe(by_players="–†–∞–∑–¥–µ–ª–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ –ø–æ –∏–≥—Ä–æ–∫–∞–º? (–¥–∞/–Ω–µ—Ç)")
        @app_commands.choices(by_players=[
            app_commands.Choice(name="–î–∞", value="yes"),
            app_commands.Choice(name="–ù–µ—Ç", value="no")
        ])
        async def session_avg(interaction: discord.Interaction, by_players: str = "no"):
            by_players_bool = by_players == "yes"
            await interaction.response.send_message("–ì–µ–Ω–µ—Ä–∏—Ä—É—é –≥—Ä–∞—Ñ–∏–∫ —Å—Ä–µ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —Å–µ—Å—Å–∏—è–º...")
            loop = asyncio.get_event_loop()
            filename = await loop.run_in_executor(None, self.viz_layer.plot_average_rolls_by_session, by_players_bool)
            with open(f'charts/{filename}', "rb") as f:
                picture = discord.File(f)
                await interaction.followup.send(file=picture)

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—É /playeravg
        @self.tree.command(name="playeravg", description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–æ–ª–±—á–∞—Ç—É—é –¥–∏–∞–≥—Ä–∞–º–º—É —Å—Ä–µ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π –±—Ä–æ—Å–∫–æ–≤ –ø–æ –∏–≥—Ä–æ–∫–∞–º")
        @app_commands.describe(session="–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Å—Å–∏—é –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π)")
        @app_commands.choices(session=[
            app_commands.Choice(name="–í—Å–µ —Å–µ—Å—Å–∏–∏", value="all"),
            app_commands.Choice(name="–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è", value="last")
        ])
        async def player_avg(interaction: discord.Interaction, session: str = "all", session_num: int = None):
            last_session = session == "last"
            session_num_value = session_num if session_num is not None else None
            await interaction.response.send_message("–ì–µ–Ω–µ—Ä–∏—Ä—É—é –≥—Ä–∞—Ñ–∏–∫ —Å—Ä–µ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ –∏–≥—Ä–æ–∫–∞–º...")
            loop = asyncio.get_event_loop()
            filename = await loop.run_in_executor(None, self.viz_layer.plot_average_rolls_by_player, last_session, session_num_value)
            with open(f'charts/{filename}', "rb") as f:
                picture = discord.File(f)
                await interaction.followup.send(file=picture)

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—É /critical
        @self.tree.command(name="critical", description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–æ–ª–±—á–∞—Ç—É—é –¥–∏–∞–≥—Ä–∞–º–º—É –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –±—Ä–æ—Å–∫–æ–≤ –ø–æ –∏–≥—Ä–æ–∫–∞–º")
        @app_commands.describe(session="–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Å—Å–∏—é –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π)")
        @app_commands.choices(session=[
            app_commands.Choice(name="–í—Å–µ —Å–µ—Å—Å–∏–∏", value="all"),
            app_commands.Choice(name="–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è", value="last")
        ])
        async def critical_rolls(interaction: discord.Interaction, session: str = "all", session_num: int = None):
            last_session = session == "last"
            session_num_value = session_num if session_num is not None else None
            await interaction.response.send_message("–ì–µ–Ω–µ—Ä–∏—Ä—É—é –≥—Ä–∞—Ñ–∏–∫ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –±—Ä–æ—Å–∫–æ–≤...")
            loop = asyncio.get_event_loop()
            filename = await loop.run_in_executor(None, self.viz_layer.plot_critical_rolls_by_player, last_session, session_num_value)
            with open(f'charts/{filename}', "rb") as f:
                picture = discord.File(f)
                await interaction.followup.send(file=picture)

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—É /help
        @self.tree.command(name="help", description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
        async def help_command(interaction: discord.Interaction):
            help_text = """
üìä –ö–æ–º–∞–Ω–¥—ã DiceBot üìä

/testcharts
  - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –≥—Ä–∞—Ñ–∏–∫–æ–≤ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Ö –≤ –ø–∞–ø–∫—É test_all_charts.
  - –ü—Ä–∏–º–µ—Ä: /testcharts

/sessionavg
  - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–∏–Ω–µ–π–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ —Å—Ä–µ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π –±—Ä–æ—Å–∫–æ–≤ –ø–æ —Å–µ—Å—Å–∏—è–º.
  - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - by_players: –í—ã–±–µ—Ä–∏—Ç–µ "–î–∞", —á—Ç–æ–±—ã —Ä–∞–∑–¥–µ–ª–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ –ø–æ –∏–≥—Ä–æ–∫–∞–º (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "–ù–µ—Ç").
  - –ü—Ä–∏–º–µ—Ä: /sessionavg by_players:–î–∞

/playeravg
  - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–æ–ª–±—á–∞—Ç—É—é –¥–∏–∞–≥—Ä–∞–º–º—É —Å—Ä–µ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π –±—Ä–æ—Å–∫–æ–≤ –ø–æ –∏–≥—Ä–æ–∫–∞–º.
  - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - session: –í—ã–±–µ—Ä–∏—Ç–µ "–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è" –∏–ª–∏ "–í—Å–µ —Å–µ—Å—Å–∏–∏" (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "–í—Å–µ —Å–µ—Å—Å–∏–∏").
    - session_num: –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–µ—Å—Å–∏–∏ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ).
  - –ü—Ä–∏–º–µ—Ä—ã:
    - /playeravg
    - /playeravg session:–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è
    - /playeravg session_num:1

/critical
  - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–æ–ª–±—á–∞—Ç—É—é –¥–∏–∞–≥—Ä–∞–º–º—É –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —É–¥–∞—á (3-4) –∏ –Ω–µ—É–¥–∞—á (17-18) –ø–æ –∏–≥—Ä–æ–∫–∞–º.
  - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - session: –í—ã–±–µ—Ä–∏—Ç–µ "–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è" –∏–ª–∏ "–í—Å–µ —Å–µ—Å—Å–∏–∏" (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "–í—Å–µ —Å–µ—Å—Å–∏–∏").
    - session_num: –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–µ—Å—Å–∏–∏ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ).
  - –ü—Ä–∏–º–µ—Ä—ã:
    - /critical
    - /critical session:–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è
    - /critical session_num:1

/help
  - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.
  - –ü—Ä–∏–º–µ—Ä: /help
            """
            await interaction.response.send_message(help_text)

    def run(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞."""
        self.bot.run(self.token)